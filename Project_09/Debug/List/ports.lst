###############################################################################
#
# IAR C/C++ Compiler V7.11.1.983/W32 for MSP430           17/Apr/2018  23:30:08
# Copyright 1996-2017 IAR Systems AB.
# Standalone license - IAR Embedded Workbench for Texas Instruments MSP430, 8K KickStart Edition 7.11
#
#    __rt_version  =  3
#    __double_size =  32
#    __reg_r4      =  free
#    __reg_r5      =  free
#    __pic         =  no
#    __core        =  430X
#    __data_model  =  small
#    __code_model  =  large
#    Source file   =  
#        C:\Users\shmes\Desktop\Escritorio
#        Personal\Escuela\ECE\306\ECE306\Project_09\ports.c
#    Command line  =  
#        -f C:\Users\shmes\AppData\Local\Temp\EWB9F4.tmp
#        ("C:\Users\shmes\Desktop\Escritorio
#        Personal\Escuela\ECE\306\ECE306\Project_09\ports.c" -lC
#        "C:\Users\shmes\Desktop\Escritorio
#        Personal\Escuela\ECE\306\ECE306\Project_09\Debug\List" -o
#        "C:\Users\shmes\Desktop\Escritorio
#        Personal\Escuela\ECE\306\ECE306\Project_09\Debug\Obj" --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --debug
#        -D__MSP430FR5994__ -e --double=32 --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench 8.0\430\lib\dlib\dl430xlsfn.h"
#        --core=430X --data_model=small -On --multiplier=32
#        --hw_workaround=CPU40 --code_model=large)
#    Locale        =  Spanish_USA.1252
#    List file     =  
#        C:\Users\shmes\Desktop\Escritorio
#        Personal\Escuela\ECE\306\ECE306\Project_09\Debug\List\ports.lst
#    Object file   =  
#        C:\Users\shmes\Desktop\Escritorio
#        Personal\Escuela\ECE\306\ECE306\Project_09\Debug\Obj\ports.r43
#
###############################################################################

C:\Users\shmes\Desktop\Escritorio Personal\Escuela\ECE\306\ECE306\Project_09\ports.c
      1          //===============================================================
      2          //  File Name: ports.c
      3          //  Description: This file contains the Initialization of all
      4          //                    port pins as well as pin-based interrupts
      5          //
      6          //  Author: Sam Messick
      7          //  Date Jan. 2018
      8          //  Compiler Build with IAR Embedded Workbench Version: V4.10A/W32 (7.11.2)
      9          //===============================================================
     10          
     11          #include "ports.h"

   \                                 In  segment DATA16_AN, at 0x202
   \   union <unnamed> _A_PAOUT_L
   \                     _A_PAOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x204
   \   union <unnamed> _A_PADIR_L
   \                     _A_PADIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20a
   \   union <unnamed> _A_PASEL0_L
   \                     _A_PASEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x20c
   \   union <unnamed> _A_PASEL1_L
   \                     _A_PASEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x222
   \   union <unnamed> _A_PBOUT_L
   \                     _A_PBOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x224
   \   union <unnamed> _A_PBDIR_L
   \                     _A_PBDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22a
   \   union <unnamed> _A_PBSEL0_L
   \                     _A_PBSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x22c
   \   union <unnamed> _A_PBSEL1_L
   \                     _A_PBSEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x23a
   \   union <unnamed> _A_PBIE_L
   \                     _A_PBIE_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x242
   \   union <unnamed> _A_PCOUT_L
   \                     _A_PCOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x244
   \   union <unnamed> _A_PCDIR_L
   \                     _A_PCDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x246
   \   union <unnamed> _A_PCREN_L
   \                     _A_PCREN_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x24a
   \   union <unnamed> _A_PCSEL0_L
   \                     _A_PCSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x24c
   \   union <unnamed> _A_PCSEL1_L
   \                     _A_PCSEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x258
   \   union <unnamed> _A_PCIES_L
   \                     _A_PCIES_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x25a
   \   union <unnamed> _A_PCIE_L
   \                     _A_PCIE_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x25c
   \   union <unnamed> _A_PCIFG_L
   \                     _A_PCIFG_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x262
   \   union <unnamed> _A_PDOUT_L
   \                     _A_PDOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x264
   \   union <unnamed> _A_PDDIR_L
   \                     _A_PDDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x26a
   \   union <unnamed> _A_PDSEL0_L
   \                     _A_PDSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x26c
   \   union <unnamed> _A_PDSEL1_L
   \                     _A_PDSEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x322
   \   union <unnamed> _A_PJOUT_L
   \                     _A_PJOUT_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x324
   \   union <unnamed> _A_PJDIR_L
   \                     _A_PJDIR_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x32a
   \   union <unnamed> _A_PJSEL0_L
   \                     _A_PJSEL0_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x32c
   \   union <unnamed> _A_PJSEL1_L
   \                     _A_PJSEL1_L:
   \   000000                DS8 2

   \                                 In  segment DATA16_AN, at 0x344
   \   union <unnamed> _A_TA0CCTL1_L
   \                     _A_TA0CCTL1_L:
   \   000000                DS8 2
     12          

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     13          volatile uint8_t debounced;
   \                     debounced:
   \   000000                DS8 1

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     14          uint8_t shape_routine_begin;
   \                     shape_routine_begin:
   \   000000                DS8 1

   \                                 In  segment DATA16_Z, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
     15          volatile uint8_t transmit_tmp_message;
   \                     transmit_tmp_message:
   \   000000                DS8 1
     16          

   \                                 In  segment CODE, align 2
     17          void Init_Port1(void){  // Initlizes all pins on Port 1
   \                     Init_Port1:
     18          //=========================================================================
     19          // RED_LED              (0x01) // RED LED 0
     20          // GRN_LED              (0x02) // GREEN LED 1
     21          // V_THUMB              (0x04) // ADC for Thumb Wheel
     22          // TEST_PROBE           (0x08) // GP I/O Pin to use to check code operation
     23          // V_DETECT_R           (0x10) // ADC for Right Detector
     24          // V_DETECT_L           (0x20) // ADC for Left Detector
     25          // SD_UCB0SIMO          (0x40) // SPI mode - slave in/master out for SD Card
     26          // SD_UC0SOMI           (0x80) // SPI mode - slave out/master in for SD Card
     27          //=========================================================================
     28            
     29            // Configure Port 1
     30            // P1_0
     31            P1SEL0 &= ~RED_LED;                   // RED_LED as GP I/O
   \   000000   D2C30A02     BIC.B   #0x1, &0x20a
     32            P1SEL1 &= ~RED_LED;                   // RED_LED as GP I/O
   \   000004   D2C30C02     BIC.B   #0x1, &0x20c
     33            P1OUT  &= ~RED_LED;                   // Set Red LED Off
   \   000008   D2C30202     BIC.B   #0x1, &0x202
     34            P1DIR  |= RED_LED;                    // Set Red LED direction to output
   \   00000C   D2D30402     BIS.B   #0x1, &0x204
     35          
     36            // P1_1
     37            P1SEL0 &= ~GRN_LED;                   // GRN_LED as GP I/O
   \   000010   E2C30A02     BIC.B   #0x2, &0x20a
     38            P1SEL1 &= ~GRN_LED;                   // GRN_LED as GP I/O
   \   000014   E2C30C02     BIC.B   #0x2, &0x20c
     39            P1OUT  &= ~GRN_LED;                   // Set Green LED Off
   \   000018   E2C30202     BIC.B   #0x2, &0x202
     40            P1DIR  |= GRN_LED;                    // Set Green LED direction to output
   \   00001C   E2D30402     BIS.B   #0x2, &0x204
     41            
     42            // P1_2
     43            P1SEL0 |= V_THUMB;                    // ADC input for Thumbwheel
   \   000020   E2D20A02     BIS.B   #0x4, &0x20a
     44            P1SEL1 |= V_THUMB;                    // ADC input for Thumbwheel
   \   000024   E2D20C02     BIS.B   #0x4, &0x20c
     45            // P1_3
     46            P1SEL0 &= ~TEST_PROBE;                // TEST_PROBE as GP I/O
   \   000028   F2C20A02     BIC.B   #0x8, &0x20a
     47            P1SEL1 &= ~TEST_PROBE;                // TEST_PROBE as GP I/O
   \   00002C   F2C20C02     BIC.B   #0x8, &0x20c
     48            P1OUT  &= ~TEST_PROBE;                // Set TEST_PROBE Off
   \   000030   F2C20202     BIC.B   #0x8, &0x202
     49            P1DIR  |=  TEST_PROBE;                // Set TEST_PROBE direction to output
   \   000034   F2D20402     BIS.B   #0x8, &0x204
     50            // P1_4
     51            P1SEL0 |= V_DETECT_R;                 // ADC input for Right Detector
   \   000038   F2D010000A02 BIS.B   #0x10, &0x20a
     52            P1SEL1 |= V_DETECT_R;                 // ADC input for Right Detector
   \   00003E   F2D010000C02 BIS.B   #0x10, &0x20c
     53            // P1_5
     54            P1SEL0 |= V_DETECT_L;                 // ADC input for Left Detector
   \   000044   F2D020000A02 BIS.B   #0x20, &0x20a
     55            P1SEL1 |= V_DETECT_L;                 // ADC input for Left Detector
   \   00004A   F2D020000C02 BIS.B   #0x20, &0x20c
     56            // P1_6
     57            P1SEL0 &= ~SD_UCB0SIMO;               // USCI_B1 MOSI pin
   \   000050   F2C040000A02 BIC.B   #0x40, &0x20a
     58            P1SEL1 |= SD_UCB0SIMO;                // USCI_B1 MOSI pin
   \   000056   F2D040000C02 BIS.B   #0x40, &0x20c
     59            // P1_7
     60            P1SEL0 &= ~SD_UC0SOMI;                // USCI_B1 MISO pin
   \   00005C   F2C080000A02 BIC.B   #0x80, &0x20a
     61            P1SEL1 |= SD_UC0SOMI;                 // USCI_B1 MISO pin
   \   000062   F2D080000C02 BIS.B   #0x80, &0x20c
     62          }
   \   000068   1001         RETA
   \   00006A                REQUIRE _A_PASEL0_L
   \   00006A                REQUIRE _A_PASEL1_L
   \   00006A                REQUIRE _A_PAOUT_L
   \   00006A                REQUIRE _A_PADIR_L
     63          ////////////////////////////////////////////////////////////////////////

   \                                 In  segment CODE, align 2
     64          void Init_Port2(void) { // Initlizes all pins on Port 2
   \                     Init_Port2:
     65          //=========================================================================
     66          // BCLUART_TXD          (0x01)
     67          // BCLUART_RXD          (0x02)
     68          // SD_SPICLK            (0x04)
     69          // P2_3                 (0x08) // Port 2 Pin 3
     70          // P2_4                 (0x10) // Port 2 Pin 4
     71          // J4_34                (0x20)
     72          // J4_35                (0x40)
     73          // P2_7                 (0x80) // Port 2 Pin 7
     74          //=========================================================================
     75            // Configure Port 2
     76            // P2_0
     77            P2SEL0 &= ~BCLUART_TXD;                // Set to GP I/O
   \   000000   D2C30B02     BIC.B   #0x1, &0x20b
     78            P2SEL1 |=  BCLUART_TXD;                // Set to GP I/O
   \   000004   D2D30D02     BIS.B   #0x1, &0x20d
     79            P2OUT  &= ~BCLUART_TXD;                // Set out value Low [off]
   \   000008   D2C30302     BIC.B   #0x1, &0x203
     80            P2DIR  |= BCLUART_TXD;                 // Set direction to output
   \   00000C   D2D30502     BIS.B   #0x1, &0x205
     81            // P2_1
     82            P2SEL0 &= ~BCLUART_RXD;                // Set to GP I/O
   \   000010   E2C30B02     BIC.B   #0x2, &0x20b
     83            P2SEL1 |=  BCLUART_RXD;                // Set to GP I/O
   \   000014   E2D30D02     BIS.B   #0x2, &0x20d
     84            P2OUT  &= ~BCLUART_RXD;                // Set out value Low [off]
   \   000018   E2C30302     BIC.B   #0x2, &0x203
     85            P2DIR  |= BCLUART_RXD;                 // Set direction to output
   \   00001C   E2D30502     BIS.B   #0x2, &0x205
     86            // P2_2
     87            P2SEL0 &= ~SD_SPICLK;                  // Set to GP I/O
   \   000020   E2C20B02     BIC.B   #0x4, &0x20b
     88            P2SEL1 &= ~SD_SPICLK;                  // Set to GP I/O
   \   000024   E2C20D02     BIC.B   #0x4, &0x20d
     89            P2OUT  &= ~SD_SPICLK;                  // Set out value Low [off]
   \   000028   E2C20302     BIC.B   #0x4, &0x203
     90            P2DIR  |= SD_SPICLK;                   // Set direction to output
   \   00002C   E2D20502     BIS.B   #0x4, &0x205
     91            // P2_3
     92            P2SEL0 &= ~P2_3;                       // Set to GP I/O
   \   000030   F2C20B02     BIC.B   #0x8, &0x20b
     93            P2SEL1 &= ~P2_3;                       // Set to GP I/O
   \   000034   F2C20D02     BIC.B   #0x8, &0x20d
     94            P2OUT  &= ~P2_3;                       // Set out value Low [off]
   \   000038   F2C20302     BIC.B   #0x8, &0x203
     95            P2DIR  |= P2_3;                        // Set direction to output
   \   00003C   F2D20502     BIS.B   #0x8, &0x205
     96            // P2_4
     97            P2SEL0 &= ~P2_4;                       // Set to GP I/O
   \   000040   F2C010000B02 BIC.B   #0x10, &0x20b
     98            P2SEL1 &= ~P2_4;                       // Set to GP I/O
   \   000046   F2C010000D02 BIC.B   #0x10, &0x20d
     99            P2OUT  &= ~P2_4;                       // Set out value Low [on]
   \   00004C   F2C010000302 BIC.B   #0x10, &0x203
    100            P2DIR  |= P2_4;                        // Set direction to output
   \   000052   F2D010000502 BIS.B   #0x10, &0x205
    101            // P2_5
    102            P2SEL0 &= ~J4_34;                      // Set to GP I/O
   \   000058   F2C020000B02 BIC.B   #0x20, &0x20b
    103            P2SEL1 &= ~J4_34;                      // Set to GP I/O
   \   00005E   F2C020000D02 BIC.B   #0x20, &0x20d
    104            P2OUT  &= ~J4_34;                      // Set out value Low [off]
   \   000064   F2C020000302 BIC.B   #0x20, &0x203
    105            P2DIR  |= J4_34;                       // Set direction to output
   \   00006A   F2D020000502 BIS.B   #0x20, &0x205
    106            // P2_6
    107            P2SEL0 &= ~J4_35;                      // Set to GP I/O
   \   000070   F2C040000B02 BIC.B   #0x40, &0x20b
    108            P2SEL1 &= ~J4_35;                      // Set to GP I/O
   \   000076   F2C040000D02 BIC.B   #0x40, &0x20d
    109            P2OUT  &= ~J4_35;                      // Set out value Low [off]
   \   00007C   F2C040000302 BIC.B   #0x40, &0x203
    110            P2DIR  |= J4_35;                       // Set direction to output
   \   000082   F2D040000502 BIS.B   #0x40, &0x205
    111            // P2_7
    112            P2SEL0 &= ~P2_7;                       // Set to GP I/O
   \   000088   F2C080000B02 BIC.B   #0x80, &0x20b
    113            P2SEL1 &= ~P2_7;                       // Set to GP I/O
   \   00008E   F2C080000D02 BIC.B   #0x80, &0x20d
    114            P2OUT  &= ~P2_7;                       // Set out value Low [off]
   \   000094   F2C080000302 BIC.B   #0x80, &0x203
    115            P2DIR  |= P2_7;                        // Set direction to output
   \   00009A   F2D080000502 BIS.B   #0x80, &0x205
    116          }
   \   0000A0   1001         RETA
   \   0000A2                REQUIRE _A_PASEL0_L
   \   0000A2                REQUIRE _A_PASEL1_L
   \   0000A2                REQUIRE _A_PAOUT_L
   \   0000A2                REQUIRE _A_PADIR_L
    117          ////////////////////////////////////////////////////////////////////////

   \                                 In  segment CODE, align 2
    118          void Init_Port3(char use_smclk) { // Initlizes all pins on Port 3
   \                     Init_Port3:
    119          //=========================================================================
    120          // IOT_RESET            (0x01) // RESET
    121          // IOT_STA_MINIAP       (0x02) // IOT_STA_MINIAP
    122          // IOT_FACTORY          (0x04) // IOT_FACTORY
    123          // IOT_WAKEUP           (0x08) // IOT_WAKEUP
    124          // L_REVERSE            (0x10) // Left Reverse
    125          // L_FORWARD            (0x20) // Left Forward
    126          // R_REVERSE            (0x40) // Right Reverse
    127          // R_FORWARD            (0x80) // Right Forward
    128          //=========================================================================
    129            // Configure Port 3
    130            // P3_0
    131            P3SEL0 &= ~IOT_RESET;                 // Set to GP I/O
   \   000000   D2C32A02     BIC.B   #0x1, &0x22a
    132            P3SEL1 &= ~IOT_RESET;                 // Set to Gp I/Ovsa1
   \   000004   D2C32C02     BIC.B   #0x1, &0x22c
    133            P3OUT  &= ~IOT_RESET;                 // Set out value Low [active]
   \   000008   D2C32202     BIC.B   #0x1, &0x222
    134            P3DIR  |= IOT_RESET;                  // Set direction to output
   \   00000C   D2D32402     BIS.B   #0x1, &0x224
    135            // P3_1
    136            P3SEL0 &= ~IOT_STA_MINIAP;            // Set to GP I/O
   \   000010   E2C32A02     BIC.B   #0x2, &0x22a
    137            P3SEL1 &= ~IOT_STA_MINIAP;            // Set to GP I/O
   \   000014   E2C32C02     BIC.B   #0x2, &0x22c
    138            P3OUT  |=  IOT_STA_MINIAP;            // Set out value no Mini AP
   \   000018   E2D32202     BIS.B   #0x2, &0x222
    139            P3DIR  |=  IOT_STA_MINIAP;            // Set direction to output
   \   00001C   E2D32402     BIS.B   #0x2, &0x224
    140            // P3_2
    141            P3SEL0 &= ~IOT_FACTORY;               // Set to GP I/O
   \   000020   E2C22A02     BIC.B   #0x4, &0x22a
    142            P3SEL1 &= ~IOT_FACTORY;               // Set to GP I/O
   \   000024   E2C22C02     BIC.B   #0x4, &0x22c
    143            P3OUT  |=  IOT_FACTORY;               // Set out value Low [off]
   \   000028   E2D22202     BIS.B   #0x4, &0x222
    144            P3DIR  |=  IOT_FACTORY;               // Set direction to output
   \   00002C   E2D22402     BIS.B   #0x4, &0x224
    145            P5IE   |=  IOT_FACTORY;               // Enable interrupts for IOT_FACTORY (link)
   \   000030   E2D25A02     BIS.B   #0x4, &0x25a
    146            P5IES  &= ~IOT_FACTORY;               // Interrupts occur on Lo/Hi edge
   \   000034   E2C25802     BIC.B   #0x4, &0x258
    147            P5IFG  &= ~IOT_FACTORY;               // Button 2 IFG cleared
   \   000038   E2C25C02     BIC.B   #0x4, &0x25c
    148            
    149            // P3_3
    150            P3SEL0 &= ~IOT_WAKEUP;                // Set to GP I/O
   \   00003C   F2C22A02     BIC.B   #0x8, &0x22a
    151            P3SEL1 &= ~IOT_WAKEUP;                // Set to GP I/O
   \   000040   F2C22C02     BIC.B   #0x8, &0x22c
    152            P3OUT  &= ~IOT_WAKEUP;                // Set out value Low [off]
   \   000044   F2C22202     BIC.B   #0x8, &0x222
    153            P3DIR  |= IOT_WAKEUP;                 // Set direction to output
   \   000048   F2D22402     BIS.B   #0x8, &0x224
    154            
    155            P3SEL0 |= L_REVERSE;
   \   00004C   F2D010002A02 BIS.B   #0x10, &0x22a
    156            P3SEL1 &= ~L_REVERSE;
   \   000052   F2C010002C02 BIC.B   #0x10, &0x22c
    157            P3OUT  &= ~L_REVERSE;
   \   000058   F2C010002202 BIC.B   #0x10, &0x222
    158            P3DIR  |= L_REVERSE;
   \   00005E   F2D010002402 BIS.B   #0x10, &0x224
    159            
    160            P3SEL0 |= L_FORWARD;
   \   000064   F2D020002A02 BIS.B   #0x20, &0x22a
    161            P3SEL1 &= ~L_FORWARD;
   \   00006A   F2C020002C02 BIC.B   #0x20, &0x22c
    162            P3OUT  &= ~L_FORWARD;
   \   000070   F2C020002202 BIC.B   #0x20, &0x222
    163            P3DIR  |= L_FORWARD;
   \   000076   F2D020002402 BIS.B   #0x20, &0x224
    164            
    165            P3SEL0 |= R_REVERSE;
   \   00007C   F2D040002A02 BIS.B   #0x40, &0x22a
    166            P3SEL1 &= ~R_REVERSE;
   \   000082   F2C040002C02 BIC.B   #0x40, &0x22c
    167            P3OUT  &= ~R_REVERSE;
   \   000088   F2C040002202 BIC.B   #0x40, &0x222
    168            P3DIR  |= R_REVERSE;
   \   00008E   F2D040002402 BIS.B   #0x40, &0x224
    169            
    170            P3SEL0 |= R_FORWARD;
   \   000094   F2D080002A02 BIS.B   #0x80, &0x22a
    171            P3SEL1 &= ~R_FORWARD;
   \   00009A   F2C080002C02 BIC.B   #0x80, &0x22c
    172            P3OUT  &= ~R_FORWARD;
   \   0000A0   F2C080002202 BIC.B   #0x80, &0x222
    173            P3DIR  |= R_FORWARD;
   \   0000A6   F2D080002402 BIS.B   #0x80, &0x224
    174          }
   \   0000AC   1001         RETA
   \   0000AE                REQUIRE _A_PBSEL0_L
   \   0000AE                REQUIRE _A_PBSEL1_L
   \   0000AE                REQUIRE _A_PBOUT_L
   \   0000AE                REQUIRE _A_PBDIR_L
   \   0000AE                REQUIRE _A_PCIE_L
   \   0000AE                REQUIRE _A_PCIES_L
   \   0000AE                REQUIRE _A_PCIFG_L
    175          

   \                                 In  segment CODE, align 2
    176          void reset_iot(void){
   \                     reset_iot:
    177            P3OUT &= ~IOT_RESET;          // reset IOT_Module
   \   000000   D2C32202     BIC.B   #0x1, &0x222
    178            P3IE  &= ~IOT_FACTORY;
   \   000004   E2C23A02     BIC.B   #0x4, &0x23a
    179            initialize_delay(QUART_SEC);
   \   000008   3C400500     MOV.W   #0x5, R12
   \   00000C   ........     CALLA   #initialize_delay
    180            while(waiting);
   \                     ??reset_iot_0:
   \   000010   C293....     CMP.B   #0x0, &waiting
   \   000014   FD23         JNE     ??reset_iot_0
    181            P3OUT |= IOT_RESET;
   \   000016   D2D32202     BIS.B   #0x1, &0x222
    182            initialize_delay(ONE_SEC);
   \   00001A   3C401400     MOV.W   #0x14, R12
   \   00001E   ........     CALLA   #initialize_delay
    183            while(waiting);
   \                     ??reset_iot_1:
   \   000022   C293....     CMP.B   #0x0, &waiting
   \   000026   FD23         JNE     ??reset_iot_1
    184          }
   \   000028   1001         RETA
   \   00002A                REQUIRE _A_PBOUT_L
   \   00002A                REQUIRE _A_PBIE_L
    185          
    186          ////////////////////////////////////////////////////////////////////////

   \                                 In  segment CODE, align 2
    187          void Init_Port4(void) { // Initlizes all pins on Port 4
   \                     Init_Port4:
    188          //=========================================================================
    189          // SD_CS                (0x01) // SD card clock signal
    190          // J4_31                (0x02) //
    191          // J4_32                (0x04) //
    192          // J4_33                (0x08) //
    193          // UCB1_CS_LCD          (0x10) //
    194          // P4_5                 (0x20) // UNUSED
    195          // P4_6                 (0x40) // UNUSED
    196          // J3_29                (0x80) //
    197          //=========================================================================
    198            // Configure Port 4
    199            // P4_0
    200            P4SEL0 &= ~SD_CS;                      // Set to GP I/O
   \   000000   D2C32B02     BIC.B   #0x1, &0x22b
    201            P4SEL1 &= ~SD_CS;                      // Set to GP I/O
   \   000004   D2C32D02     BIC.B   #0x1, &0x22d
    202            P4OUT  &= ~SD_CS;                      // Set out value Low [off]
   \   000008   D2C32302     BIC.B   #0x1, &0x223
    203            P4DIR  |= SD_CS;                       // Set direction to output
   \   00000C   D2D32502     BIS.B   #0x1, &0x225
    204            // P4_1
    205            P4SEL0 &= ~J4_31;                      // Set to GP I/O
   \   000010   E2C32B02     BIC.B   #0x2, &0x22b
    206            P4SEL1 &= ~J4_31;                      // Set to GP I/O
   \   000014   E2C32D02     BIC.B   #0x2, &0x22d
    207            P4OUT  &= ~J4_31;                      // Set out value Low [off]
   \   000018   E2C32302     BIC.B   #0x2, &0x223
    208            P4DIR  |= J4_31;                       // Set direction to output
   \   00001C   E2D32502     BIS.B   #0x2, &0x225
    209            // P4_2
    210            P4SEL0 &= ~J4_32;                      // Set to GP I/O
   \   000020   E2C22B02     BIC.B   #0x4, &0x22b
    211            P4SEL1 &= ~J4_32;                      // Set to GP I/O
   \   000024   E2C22D02     BIC.B   #0x4, &0x22d
    212            P4OUT  &= ~J4_32;                      // Set out value Low [off]
   \   000028   E2C22302     BIC.B   #0x4, &0x223
    213            P4DIR  |= J4_32;                       // Set direction to output
   \   00002C   E2D22502     BIS.B   #0x4, &0x225
    214            // P4_3
    215            P4SEL0 &= ~J4_33;                      // Set to GP I/O
   \   000030   F2C22B02     BIC.B   #0x8, &0x22b
    216            P4SEL1 &= ~J4_33;                      // Set to GP I/O
   \   000034   F2C22D02     BIC.B   #0x8, &0x22d
    217            P4OUT  &= ~J4_33;                      // Set out value Low [off]
   \   000038   F2C22302     BIC.B   #0x8, &0x223
    218            P4DIR  |= J4_33;                       // Set direction to output
   \   00003C   F2D22502     BIS.B   #0x8, &0x225
    219            // P4_4
    220            P4SEL0 &= ~UCB1_CS_LCD;                // Set to GP I/O
   \   000040   F2C010002B02 BIC.B   #0x10, &0x22b
    221            P4SEL1 &= ~UCB1_CS_LCD;                // Set to GP I/O
   \   000046   F2C010002D02 BIC.B   #0x10, &0x22d
    222            P4OUT  |= UCB1_CS_LCD;                 // Set out value High [on]
   \   00004C   F2D010002302 BIS.B   #0x10, &0x223
    223            P4DIR  |= UCB1_CS_LCD;                 // Set direction to output
   \   000052   F2D010002502 BIS.B   #0x10, &0x225
    224            // P4_5
    225            P4SEL0 &= ~P4_5;                       // Set to GP I/O
   \   000058   F2C020002B02 BIC.B   #0x20, &0x22b
    226            P4SEL1 &= ~P4_5;                       // Set to GP I/O
   \   00005E   F2C020002D02 BIC.B   #0x20, &0x22d
    227            P4OUT  &= ~P4_5;                       // Set out value Low [off]
   \   000064   F2C020002302 BIC.B   #0x20, &0x223
    228            P4DIR  |= P4_5;                        // Set direction to output
   \   00006A   F2D020002502 BIS.B   #0x20, &0x225
    229            // P4_6
    230            P4SEL0 &= ~P4_6;                       // Set to GP I/O
   \   000070   F2C040002B02 BIC.B   #0x40, &0x22b
    231            P4SEL1 &= ~P4_6;                       // Set to GP I/O
   \   000076   F2C040002D02 BIC.B   #0x40, &0x22d
    232            P4OUT  &= ~P4_6;                       // Set out value Low [off]
   \   00007C   F2C040002302 BIC.B   #0x40, &0x223
    233            P4DIR  |= P4_6;                        // Set direction to output
   \   000082   F2D040002502 BIS.B   #0x40, &0x225
    234            // P4_7
    235            P4SEL0 &= ~J3_29;                      // Set to GP I/O
   \   000088   F2C080002B02 BIC.B   #0x80, &0x22b
    236            P4SEL1 &= ~J3_29;                      // Set to GP I/O
   \   00008E   F2C080002D02 BIC.B   #0x80, &0x22d
    237            P4OUT  &= ~J3_29;                      // Set out value Low [off]
   \   000094   F2C080002302 BIC.B   #0x80, &0x223
    238            P4DIR  |= J3_29;                       // Set direction to output
   \   00009A   F2D080002502 BIS.B   #0x80, &0x225
    239          }
   \   0000A0   1001         RETA
   \   0000A2                REQUIRE _A_PBSEL0_L
   \   0000A2                REQUIRE _A_PBSEL1_L
   \   0000A2                REQUIRE _A_PBOUT_L
   \   0000A2                REQUIRE _A_PBDIR_L
    240          ////////////////////////////////////////////////////////////////////////

   \                                 In  segment CODE, align 2
    241          void Init_Port5(void) { // Initializes all pins on Port 5
   \                     Init_Port5:
    242          //=========================================================================
    243          // UCB1SIMO             (0x01) // UCB1SIMO
    244          // UCB1SOMI             (0x02) // UBC1SIMO
    245          // UCB1SCK              (0x04) // SPI mode - clock output - UCB1CLK
    246          // RESET_LCD            (0x08) // LCD Reset
    247          // P5_4                 (0x10) // UNUSED
    248          // BUTTON2              (0x20) // Button 2
    249          // BUTTON1              (0x40) // Button 1
    250          // LCD_BACKLITE         (0x80) // LCD Backlite
    251          //=========================================================================
    252            // Configure Port 5
    253            // P5_0
    254            P5SEL0 |= UCB1SIMO;                   // USCI_B1 SIMO pin
   \   000000   D2D34A02     BIS.B   #0x1, &0x24a
    255            P5SEL1 &= ~UCB1SIMO;                  // USCI_B1 SIMO pin
   \   000004   D2C34C02     BIC.B   #0x1, &0x24c
    256            P5OUT  &= ~UCB1SIMO;
   \   000008   D2C34202     BIC.B   #0x1, &0x242
    257            // P5_1
    258            P5SEL0 |= UCB1SOMI;                   // USCI_B1 SOMI pin
   \   00000C   E2D34A02     BIS.B   #0x2, &0x24a
    259            P5SEL1 &= ~UCB1SOMI;                  // USCI_B1 SOMI pin
   \   000010   E2C34C02     BIC.B   #0x2, &0x24c
    260            P5OUT  &= ~UCB1SOMI;
   \   000014   E2C34202     BIC.B   #0x2, &0x242
    261            // P5_2
    262            P5SEL0 |= UCB1SCK;                    // USCI_B1 SCLK pin
   \   000018   E2D24A02     BIS.B   #0x4, &0x24a
    263            P5SEL1 &= ~UCB1SCK;                   // USCI_B1 SCLK pin
   \   00001C   E2C24C02     BIC.B   #0x4, &0x24c
    264            P5OUT  &= ~UCB1SCK;
   \   000020   E2C24202     BIC.B   #0x4, &0x242
    265            // P5_3
    266            P5SEL0 &= ~RESET_LCD;                 // Set to GP I/O
   \   000024   F2C24A02     BIC.B   #0x8, &0x24a
    267            P5SEL1 &= ~RESET_LCD;                 // Set to GP I/O
   \   000028   F2C24C02     BIC.B   #0x8, &0x24c
    268            P5OUT  |= RESET_LCD;                  // Set out value High [off]
   \   00002C   F2D24202     BIS.B   #0x8, &0x242
    269            P5DIR  |= RESET_LCD;                  // Set direction to output
   \   000030   F2D24402     BIS.B   #0x8, &0x244
    270            // P5_4
    271            P5SEL0 &= ~P5_4 ;                     // Set to GP I/O
   \   000034   F2C010004A02 BIC.B   #0x10, &0x24a
    272            P5SEL1 &= ~P5_4 ;                     // Set to GP I/O
   \   00003A   F2C010004C02 BIC.B   #0x10, &0x24c
    273            P5OUT  |= P5_4;
   \   000040   F2D010004202 BIS.B   #0x10, &0x242
    274            P5DIR  &= ~P5_4;                      // Set direction to output
   \   000046   F2C010004402 BIC.B   #0x10, &0x244
    275            // P5_5
    276            P5SEL0 &= ~BUTTON2;                   // Set to GP I/O
   \   00004C   F2C020004A02 BIC.B   #0x20, &0x24a
    277            P5SEL1 &= ~BUTTON2;                   // Set to GP I/O
   \   000052   F2C020004C02 BIC.B   #0x20, &0x24c
    278            P5OUT  |= BUTTON2;                    // Configure pullup resistor
   \   000058   F2D020004202 BIS.B   #0x20, &0x242
    279            P5DIR  &= ~BUTTON2;                   // Set direction to input
   \   00005E   F2C020004402 BIC.B   #0x20, &0x244
    280            P5REN  |= BUTTON2;                    // Enable pullup resistor
   \   000064   F2D020004602 BIS.B   #0x20, &0x246
    281            P5IE   |= BUTTON2;                    // Enable interrupts for Button2
   \   00006A   F2D020005A02 BIS.B   #0x20, &0x25a
    282            P5IES  |= BUTTON2;                    // Interrupts occur on Hi/Lo edge
   \   000070   F2D020005802 BIS.B   #0x20, &0x258
    283            P5IFG  &= ~BUTTON2;                   // Button 2 IFG cleared
   \   000076   F2C020005C02 BIC.B   #0x20, &0x25c
    284            // P5_6
    285            P5SEL0 &= ~BUTTON1;                   // Set to GP I/O
   \   00007C   F2C040004A02 BIC.B   #0x40, &0x24a
    286            P5SEL1 &= ~BUTTON1;                   // Set to GP I/O
   \   000082   F2C040004C02 BIC.B   #0x40, &0x24c
    287            P5OUT  |= BUTTON1;                    // Configure pullup resistor
   \   000088   F2D040004202 BIS.B   #0x40, &0x242
    288            P5DIR  &= ~BUTTON1;                   // Set direction to input
   \   00008E   F2C040004402 BIC.B   #0x40, &0x244
    289            P5REN  |= BUTTON1;                    // Enable pullup resistor
   \   000094   F2D040004602 BIS.B   #0x40, &0x246
    290            P5IE   |= BUTTON1;                    // Enable interrupts for Button2
   \   00009A   F2D040005A02 BIS.B   #0x40, &0x25a
    291            P5IES  |= BUTTON1;                    // Interrupts occur on Hi/Lo edge
   \   0000A0   F2D040005802 BIS.B   #0x40, &0x258
    292            P5IFG  &= ~BUTTON1;                   // Button 2 IFG cleared
   \   0000A6   F2C040005C02 BIC.B   #0x40, &0x25c
    293            // P5_7
    294            P5SEL0 &= ~LCD_BACKLITE;              // Set to GP I/O
   \   0000AC   F2C080004A02 BIC.B   #0x80, &0x24a
    295            P5SEL1 &= ~LCD_BACKLITE;              // Set to GP I/O
   \   0000B2   F2C080004C02 BIC.B   #0x80, &0x24c
    296            P5OUT  &= ~LCD_BACKLITE;              // Set out value Low [off]
   \   0000B8   F2C080004202 BIC.B   #0x80, &0x242
    297            P5DIR  |= LCD_BACKLITE;               // Set direction to output
   \   0000BE   F2D080004402 BIS.B   #0x80, &0x244
    298          }
   \   0000C4   1001         RETA
   \   0000C6                REQUIRE _A_PCSEL0_L
   \   0000C6                REQUIRE _A_PCSEL1_L
   \   0000C6                REQUIRE _A_PCOUT_L
   \   0000C6                REQUIRE _A_PCDIR_L
   \   0000C6                REQUIRE _A_PCREN_L
   \   0000C6                REQUIRE _A_PCIE_L
   \   0000C6                REQUIRE _A_PCIES_L
   \   0000C6                REQUIRE _A_PCIFG_L
    299          ////////////////////////////////////////////////////////////////////////

   \                                 In  segment CODE, align 2
    300          void Init_Port6(void) { // Initializes all pins on Port 6
   \                     Init_Port6:
    301          //=========================================================================
    302          // UCA3TXD              (0x01) // 
    303          // UCA3RXD              (0x02) //
    304          // J1_5                 (0x04) //
    305          // MAG_INT              (0x08) //
    306          // P6_4                 (0x10) // UNUSED
    307          // P6_5                 (0x20) // UNUSED
    308          // P6_6                 (0x40) // UNUSED
    309          // P6_7                 (0x80) // UNUSED
    310          //=========================================================================
    311            // Configure Port 6
    312            // P6_0
    313            P6SEL0 |=  UCA3TXD;                   // Set to GP I/O
   \   000000   D2D34B02     BIS.B   #0x1, &0x24b
    314            P6SEL1 &= ~UCA3TXD;                   // Set to GP I/O
   \   000004   D2C34D02     BIC.B   #0x1, &0x24d
    315            P6OUT  &= ~UCA3TXD;                   // Set out value Low [off]
   \   000008   D2C34302     BIC.B   #0x1, &0x243
    316            P6DIR  |= UCA3TXD;                    // Set direction to output
   \   00000C   D2D34502     BIS.B   #0x1, &0x245
    317            // P6_1
    318            P6SEL0 |=  UCA3RXD;                   // Set to GP I/O
   \   000010   E2D34B02     BIS.B   #0x2, &0x24b
    319            P6SEL1 &= ~UCA3RXD;                   // Set to GP I/O
   \   000014   E2C34D02     BIC.B   #0x2, &0x24d
    320            P6OUT  &= ~UCA3RXD;                   // Set out value Low [off]
   \   000018   E2C34302     BIC.B   #0x2, &0x243
    321            P6DIR  |= UCA3RXD;                    // Set direction to output
   \   00001C   E2D34502     BIS.B   #0x2, &0x245
    322            // P6_2
    323            P6SEL0 &= ~J1_5;                      // Set to GP I/O
   \   000020   E2C24B02     BIC.B   #0x4, &0x24b
    324            P6SEL1 &= ~J1_5;                      // Set to GP I/O
   \   000024   E2C24D02     BIC.B   #0x4, &0x24d
    325            P6OUT  &= ~J1_5;                      // Set out value Low [off]
   \   000028   E2C24302     BIC.B   #0x4, &0x243
    326            P6DIR  |= J1_5;                       // Set direction to output
   \   00002C   E2D24502     BIS.B   #0x4, &0x245
    327            // P6_3
    328            P6SEL0 &= ~MAG_INT;                   // Set to GP I/O
   \   000030   F2C24B02     BIC.B   #0x8, &0x24b
    329            P6SEL1 &= ~MAG_INT;                   // Set to GP I/O
   \   000034   F2C24D02     BIC.B   #0x8, &0x24d
    330            P6OUT  &= ~MAG_INT;                   // Set out value Low [off]
   \   000038   F2C24302     BIC.B   #0x8, &0x243
    331            P6DIR  |= MAG_INT;                    // Set direction to output
   \   00003C   F2D24502     BIS.B   #0x8, &0x245
    332            // P6_4
    333            P6SEL0 &= ~P6_4;                      // Set to GP I/O
   \   000040   F2C010004B02 BIC.B   #0x10, &0x24b
    334            P6SEL1 &= ~P6_4;                      // Set to GP I/O
   \   000046   F2C010004D02 BIC.B   #0x10, &0x24d
    335            P6OUT  &= ~P6_4;                      // Set out value Low [off]
   \   00004C   F2C010004302 BIC.B   #0x10, &0x243
    336            P6DIR  |= P6_4;                       // Set direction to output
   \   000052   F2D010004502 BIS.B   #0x10, &0x245
    337            // P6_5
    338            P6SEL0 &= ~P6_5;                      // Set to GP I/O
   \   000058   F2C020004B02 BIC.B   #0x20, &0x24b
    339            P6SEL1 &= ~P6_5;                      // Set to GP I/O
   \   00005E   F2C020004D02 BIC.B   #0x20, &0x24d
    340            P6OUT  &= ~P6_5;                      // Set out value Low [off]
   \   000064   F2C020004302 BIC.B   #0x20, &0x243
    341            P6DIR  |= P6_5;                       // Set direction to output
   \   00006A   F2D020004502 BIS.B   #0x20, &0x245
    342            // P6_6
    343            P6SEL0 &= ~P6_6;                      // Set to GP I/O
   \   000070   F2C040004B02 BIC.B   #0x40, &0x24b
    344            P6SEL1 &= ~P6_6;                      // Set to GP I/O
   \   000076   F2C040004D02 BIC.B   #0x40, &0x24d
    345            P6OUT  &= ~P6_6;                      // Set out value Low [off]
   \   00007C   F2C040004302 BIC.B   #0x40, &0x243
    346            P6DIR  |= P6_6;                       // Set direction to output
   \   000082   F2D040004502 BIS.B   #0x40, &0x245
    347            // P6_7
    348            P6SEL0 &= ~P6_7;                      // Set to GP I/O
   \   000088   F2C080004B02 BIC.B   #0x80, &0x24b
    349            P6SEL1 &= ~P6_7;                      // Set to GP I/O
   \   00008E   F2C080004D02 BIC.B   #0x80, &0x24d
    350            P6OUT  &= ~P6_7;                      // Set out value Low [off]
   \   000094   F2C080004302 BIC.B   #0x80, &0x243
    351            P6DIR  |= P6_7;                       // Set direction to output
   \   00009A   F2D080004502 BIS.B   #0x80, &0x245
    352          }
   \   0000A0   1001         RETA
   \   0000A2                REQUIRE _A_PCSEL0_L
   \   0000A2                REQUIRE _A_PCSEL1_L
   \   0000A2                REQUIRE _A_PCOUT_L
   \   0000A2                REQUIRE _A_PCDIR_L
    353          ////////////////////////////////////////////////////////////////////////

   \                                 In  segment CODE, align 2
    354          void Init_Port7(void) { // Initializes all pins on Port 7
   \                     Init_Port7:
    355          //=========================================================================
    356          // I2CSDA               (0x01) //
    357          // I2CSCL               (0x02) //
    358          // SD_DETECT            (0x04) //
    359          // J4_36                (0x08) // 
    360          // P7_4                 (0x10) // UNUSED
    361          // P7_5                 (0x20) // UNUSED
    362          // P7_6                 (0x40) // UNUSED
    363          // P7_7                 (0x80) // UNUSED
    364          //=========================================================================
    365            // Configure Port 7
    366            // P7_0
    367            P7SEL0 &= ~I2CSDA;                    // Set to GP I/O
   \   000000   D2C36A02     BIC.B   #0x1, &0x26a
    368            P7SEL1 &= ~I2CSDA;                    // Set to GP I/O
   \   000004   D2C36C02     BIC.B   #0x1, &0x26c
    369            P7OUT  &= ~I2CSDA;                    // Set out value Low [off]
   \   000008   D2C36202     BIC.B   #0x1, &0x262
    370            P7DIR  |= I2CSDA;                     // Set direction to output
   \   00000C   D2D36402     BIS.B   #0x1, &0x264
    371            // P7_1
    372            P7SEL0 &= ~I2CSCL;                    // Set to GP I/O
   \   000010   E2C36A02     BIC.B   #0x2, &0x26a
    373            P7SEL1 &= ~I2CSCL;                    // Set to GP I/O
   \   000014   E2C36C02     BIC.B   #0x2, &0x26c
    374            P7OUT  &= ~I2CSCL;                    // Set out value Low [off]
   \   000018   E2C36202     BIC.B   #0x2, &0x262
    375            P7DIR  |= I2CSCL;                     // Set direction to output
   \   00001C   E2D36402     BIS.B   #0x2, &0x264
    376            // P7_2
    377            P7SEL0 &= ~SD_DETECT;                 // Set to GP I/O
   \   000020   E2C26A02     BIC.B   #0x4, &0x26a
    378            P7SEL1 &= ~SD_DETECT;                 // Set to GP I/O
   \   000024   E2C26C02     BIC.B   #0x4, &0x26c
    379            P7OUT  &= ~SD_DETECT;                 // Set out value Low [off]
   \   000028   E2C26202     BIC.B   #0x4, &0x262
    380            P7DIR  |= SD_DETECT;                  // Set direction to output
   \   00002C   E2D26402     BIS.B   #0x4, &0x264
    381            // P7_3
    382            P7SEL0 &= ~J4_36;                     // Set to GP I/O
   \   000030   F2C26A02     BIC.B   #0x8, &0x26a
    383            P7SEL1 &= ~J4_36;                     // Set to GP I/O
   \   000034   F2C26C02     BIC.B   #0x8, &0x26c
    384            P7OUT  &= ~J4_36;                     // Set out value Low [off]
   \   000038   F2C26202     BIC.B   #0x8, &0x262
    385            P7DIR  |= J4_36;                      // Set direction to output
   \   00003C   F2D26402     BIS.B   #0x8, &0x264
    386            // P7_4
    387            P7SEL0 &= ~P7_4;                      // Set to GP I/O
   \   000040   F2C010006A02 BIC.B   #0x10, &0x26a
    388            P7SEL1 &= ~P7_4;                      // Set to GP I/O
   \   000046   F2C010006C02 BIC.B   #0x10, &0x26c
    389            P7OUT  &= ~P7_4;                      // Set out value Low [off]
   \   00004C   F2C010006202 BIC.B   #0x10, &0x262
    390            P7DIR  |= P7_4;                       // Set direction to output
   \   000052   F2D010006402 BIS.B   #0x10, &0x264
    391            // P7_5
    392            P7SEL0 &= ~P7_5;                      // Set to GP I/O
   \   000058   F2C020006A02 BIC.B   #0x20, &0x26a
    393            P7SEL1 &= ~P7_5;                      // Set to GP I/O
   \   00005E   F2C020006C02 BIC.B   #0x20, &0x26c
    394            P7OUT  &= ~P7_5;                      // Set out value Low [off]
   \   000064   F2C020006202 BIC.B   #0x20, &0x262
    395            P7DIR  |= P7_5;                       // Set direction to output
   \   00006A   F2D020006402 BIS.B   #0x20, &0x264
    396            // P7_6
    397            P7SEL0 &= ~P7_6;                      // Set to GP I/O
   \   000070   F2C040006A02 BIC.B   #0x40, &0x26a
    398            P7SEL1 &= ~P7_6;                      // Set to GP I/O
   \   000076   F2C040006C02 BIC.B   #0x40, &0x26c
    399            P7OUT  &= ~P7_6;                      // Set out value Low [off]
   \   00007C   F2C040006202 BIC.B   #0x40, &0x262
    400            P7DIR  |= P7_6;                       // Set direction to output
   \   000082   F2D040006402 BIS.B   #0x40, &0x264
    401            // P7_7
    402            P7SEL0 &= ~P7_7;                      // Set to GP I/O
   \   000088   F2C080006A02 BIC.B   #0x80, &0x26a
    403            P7SEL1 &= ~P7_7;                      // Set to GP I/O
   \   00008E   F2C080006C02 BIC.B   #0x80, &0x26c
    404            P7OUT  &= ~P7_7;                      // Set out value Low [off]
   \   000094   F2C080006202 BIC.B   #0x80, &0x262
    405            P7DIR  |= P7_7;                       // Set direction to output
   \   00009A   F2D080006402 BIS.B   #0x80, &0x264
    406          }
   \   0000A0   1001         RETA
   \   0000A2                REQUIRE _A_PDSEL0_L
   \   0000A2                REQUIRE _A_PDSEL1_L
   \   0000A2                REQUIRE _A_PDOUT_L
   \   0000A2                REQUIRE _A_PDDIR_L
    407          ////////////////////////////////////////////////////////////////////////

   \                                 In  segment CODE, align 2
    408          void Init_Port8(void) { // Initializes all pins on Port 8
   \                     Init_Port8:
    409          //=========================================================================
    410          // IR_LED               (0x01) // Infrared LED
    411          // OPT_INT              (0x02) // Optical INT
    412          // TMP_INT              (0x04) // Temporary INT
    413          // INT2                 (0x08) // INT2
    414          //=========================================================================
    415            // Configure Port 8
    416            // P8_0
    417            P8SEL0 &= ~IR_LED;                     // Set to GP I/O
   \   000000   D2C36B02     BIC.B   #0x1, &0x26b
    418            P8SEL1 &= ~IR_LED;                     // Set to GP I/O
   \   000004   D2C36D02     BIC.B   #0x1, &0x26d
    419            P8OUT  |= IR_LED;                     // Set out value Low [off]
   \   000008   D2D36302     BIS.B   #0x1, &0x263
    420            P8DIR  |= IR_LED;                      // Set direction to output
   \   00000C   D2D36502     BIS.B   #0x1, &0x265
    421            // P8_1
    422            P8SEL0 &= ~OPT_INT;                    // Set to GP I/O
   \   000010   E2C36B02     BIC.B   #0x2, &0x26b
    423            P8SEL1 &= ~OPT_INT;                    // Set to GP I/O
   \   000014   E2C36D02     BIC.B   #0x2, &0x26d
    424            P8OUT  &= ~OPT_INT;                    // Set out value Low [off]
   \   000018   E2C36302     BIC.B   #0x2, &0x263
    425            P8DIR  |= OPT_INT;                     // Set direction to output
   \   00001C   E2D36502     BIS.B   #0x2, &0x265
    426            // P8_2
    427            P8SEL0 &= ~TMP_INT;                    // Set to GP I/O
   \   000020   E2C26B02     BIC.B   #0x4, &0x26b
    428            P8SEL1 &= ~TMP_INT;                    // Set to GP I/O
   \   000024   E2C26D02     BIC.B   #0x4, &0x26d
    429            P8OUT  &= ~TMP_INT;                    // Set out value Low [off]
   \   000028   E2C26302     BIC.B   #0x4, &0x263
    430            P8DIR  |= TMP_INT;                     // Set direction to output
   \   00002C   E2D26502     BIS.B   #0x4, &0x265
    431            // P8_3
    432            P8SEL0 &= ~INT2;                       // Set to GP I/O
   \   000030   F2C26B02     BIC.B   #0x8, &0x26b
    433            P8SEL1 &= ~INT2;                       // Set to GP I/O
   \   000034   F2C26D02     BIC.B   #0x8, &0x26d
    434            P8OUT  &= ~INT2;                       // Set out value Low [off]
   \   000038   F2C26302     BIC.B   #0x8, &0x263
    435            P8DIR  |= INT2;                        // Set direction to output
   \   00003C   F2D26502     BIS.B   #0x8, &0x265
    436          }
   \   000040   1001         RETA
   \   000042                REQUIRE _A_PDSEL0_L
   \   000042                REQUIRE _A_PDSEL1_L
   \   000042                REQUIRE _A_PDOUT_L
   \   000042                REQUIRE _A_PDDIR_L
    437          /////////////////////////////////////////////////////////////////////////

   \                                 In  segment CODE, align 2
    438          void Init_PortJ(void) { // Initializes all pins on Port J
   \                     Init_PortJ:
    439          //=========================================================================
    440          // PJ_0                 (0x01) // UNUSED
    441          // PJ_1                 (0x02) // UNUSED
    442          // PJ_2                 (0x04) // UNUSED
    443          // PJ_3                 (0x08) // UNUSED
    444          // LFXIN                (0x10) // LFX Input
    445          // LFXOUT               (0x20) // LFX Output
    446          // HFXIN                (0x40) // HFX Input
    447          // HFXOUT               (0x80) // HFX Output
    448          //=========================================================================
    449            // Configure Port J
    450            // PJ_0
    451            PJSEL0 &= ~PJ_0;                      // Set to GP I/O
   \   000000   92C32A03     BIC.W   #0x1, &0x32a
    452            PJSEL1 &= ~PJ_0;                      // Set to GP I/O
   \   000004   92C32C03     BIC.W   #0x1, &0x32c
    453            PJOUT  &= ~PJ_0;                      // Set out value Low [off]
   \   000008   92C32203     BIC.W   #0x1, &0x322
    454            PJDIR  |= PJ_0;                       // Set direction to output
   \   00000C   92D32403     BIS.W   #0x1, &0x324
    455            // PJ_1
    456            PJSEL0 &= ~PJ_1;                      // Set to GP I/O
   \   000010   A2C32A03     BIC.W   #0x2, &0x32a
    457            PJSEL1 &= ~PJ_1;                      // Set to GP I/O
   \   000014   A2C32C03     BIC.W   #0x2, &0x32c
    458            PJOUT  &= ~PJ_1;                      // Set out value Low [off]
   \   000018   A2C32203     BIC.W   #0x2, &0x322
    459            PJDIR  |= PJ_1;                       // Set direction to output
   \   00001C   A2D32403     BIS.W   #0x2, &0x324
    460            // PJ_2 
    461            PJSEL0 &= ~PJ_2;                      // Set to GP I/O
   \   000020   A2C22A03     BIC.W   #0x4, &0x32a
    462            PJSEL1 &= ~PJ_2;                      // Set to GP I/O
   \   000024   A2C22C03     BIC.W   #0x4, &0x32c
    463            PJOUT  &= ~PJ_2;                      // Set out value Low [off]
   \   000028   A2C22203     BIC.W   #0x4, &0x322
    464            PJDIR  |= PJ_2;                       // Set direction to output
   \   00002C   A2D22403     BIS.W   #0x4, &0x324
    465            // PJ_3
    466            PJSEL0 &= ~PJ_3;                      // Set to GP I/O
   \   000030   B2C22A03     BIC.W   #0x8, &0x32a
    467            PJSEL1 &= ~PJ_3;                      // Set to GP I/O
   \   000034   B2C22C03     BIC.W   #0x8, &0x32c
    468            PJOUT  &= ~PJ_3;                      // Set out value Low [off]
   \   000038   B2C22203     BIC.W   #0x8, &0x322
    469            PJDIR  |= PJ_3;                       // Set direction to output
   \   00003C   B2D22403     BIS.W   #0x8, &0x324
    470            // PJ_4
    471            PJSEL0 |= LFXIN;                      // Primary function selected
   \   000040   B2D010002A03 BIS.W   #0x10, &0x32a
    472            PJSEL1 &= ~LFXIN;                     // Primary function selected
   \   000046   B2C010002C03 BIC.W   #0x10, &0x32c
    473            PJOUT  &= ~LFXIN;                     // Set out value Low [off]
   \   00004C   B2C010002203 BIC.W   #0x10, &0x322
    474            PJDIR  |= LFXIN;                      // Set direction to output
   \   000052   B2D010002403 BIS.W   #0x10, &0x324
    475            // PJ_5
    476            PJSEL0 |=  LFXOUT;                    // Primary function selected
   \   000058   B2D020002A03 BIS.W   #0x20, &0x32a
    477            PJSEL1 &= ~LFXOUT;                    // Primary function selected
   \   00005E   B2C020002C03 BIC.W   #0x20, &0x32c
    478            PJOUT  &= ~LFXOUT;                    // Set out value Low [off]
   \   000064   B2C020002203 BIC.W   #0x20, &0x322
    479            PJDIR  |= LFXOUT;                     // Set direction to output
   \   00006A   B2D020002403 BIS.W   #0x20, &0x324
    480            // PJ_6
    481            PJSEL0 &= ~HFXIN;                     // Set to GP I/O
   \   000070   B2C040002A03 BIC.W   #0x40, &0x32a
    482            PJSEL1 &= ~HFXIN;                     // Set to GP I/O
   \   000076   B2C040002C03 BIC.W   #0x40, &0x32c
    483            PJOUT  &= ~HFXIN;                     // Set out value Low [off]
   \   00007C   B2C040002203 BIC.W   #0x40, &0x322
    484            PJDIR  |= HFXIN;                      // Set direction to output
   \   000082   B2D040002403 BIS.W   #0x40, &0x324
    485            // PJ_7
    486            PJSEL0 &= ~HFXOUT;                    // Set to GP I/O
   \   000088   B2C080002A03 BIC.W   #0x80, &0x32a
    487            PJSEL1 &= ~HFXOUT;                    // Set to GP I/O
   \   00008E   B2C080002C03 BIC.W   #0x80, &0x32c
    488            PJOUT  &= ~HFXOUT;                    // Set out value Low [off]
   \   000094   B2C080002203 BIC.W   #0x80, &0x322
    489            PJDIR  |= HFXOUT;                     // Set direction to output
   \   00009A   B2D080002403 BIS.W   #0x80, &0x324
    490          }
   \   0000A0   1001         RETA
   \   0000A2                REQUIRE _A_PJSEL0_L
   \   0000A2                REQUIRE _A_PJSEL1_L
   \   0000A2                REQUIRE _A_PJOUT_L
   \   0000A2                REQUIRE _A_PJDIR_L
    491          

   \                                 In  segment CODE, align 2
    492          void Init_Ports(void){ // Calls all port initialization functions
   \                     Init_Ports:
    493            debounced = true;
   \   000000   D243....     MOV.B   #0x1, &debounced
    494            Init_Port1();
   \   000004   ........     CALLA   #Init_Port1
    495            Init_Port2();
   \   000008   ........     CALLA   #Init_Port2
    496            Init_Port3(false);
   \   00000C   4C43         MOV.B   #0x0, R12
   \   00000E   ........     CALLA   #Init_Port3
    497            Init_Port4();
   \   000012   ........     CALLA   #Init_Port4
    498            Init_Port5();
   \   000016   ........     CALLA   #Init_Port5
    499            Init_Port6();
   \   00001A   ........     CALLA   #Init_Port6
    500            Init_Port7();
   \   00001E   ........     CALLA   #Init_Port7
    501            Init_Port8();
   \   000022   ........     CALLA   #Init_Port8
    502            Init_PortJ();
   \   000026   ........     BRA     #Init_PortJ
    503          }
    504          
    505          #pragma vector = PORT5_VECTOR

   \                                 In  segment ISR_CODE, align 2
    506          __interrupt void Port_5(void){
   \                     Port_5:
   \   000000   5F15         PUSHM.W #0x6, R15
    507            switch(P5IFG & PORT5_INT_MASK)
   \   000002   5E425C02     MOV.B   &0x25c, R14
   \   000006   4E4E         MOV.B   R14, R14
   \   000008   3EF06000     AND.W   #0x60, R14
   \   00000C   7E802000     SUB.B   #0x20, R14
   \   000010   0C24         JEQ     ??Port_5_3
   \   000012   7E802000     SUB.B   #0x20, R14
   \   000016   2920         JNE     ??Port_5_0
    508            {
    509            case P5IFG_BUTTON_2: // Right Button
    510              if(debounced)                     // Has the switch had time to readjust?
   \   000018   C293....     CMP.B   #0x0, &debounced
   \   00001C   2624         JEQ     ??Port_5_0
    511              {
    512                P3OUT &= ~(IOT_RESET);               // Disable IOT_RESET pin for soft reset
   \   00001E   D2C32202     BIC.B   #0x1, &0x222
    513                TA0CCTL1 |= CCIE;                   // Enable debounce timer
   \   000022   B2D010004403 BIS.W   #0x10, &0x344
    514              }
    515              break;
   \   000028   203C         JMP     ??Port_5_0
    516            case P5IFG_BUTTON_1: // Left Button
    517              if(debounced)                     // Has the switch had time to readjust?
   \                     ??Port_5_3:
   \   00002A   C293....     CMP.B   #0x0, &debounced
   \   00002E   1D24         JEQ     ??Port_5_0
    518              {
    519                menu_counter++;
   \   000030   D253....     ADD.B   #0x1, &menu_counter
    520                menu_counter %= MENU_NUM_OPTIONS;
   \   000034   2A43         MOV.W   #0x2, R10
   \   000036   5C42....     MOV.B   &menu_counter, R12
   \   00003A   8C11         SXT     R12
   \   00003C   3CF3         AND.W   #0xffff, R12
   \   00003E   0E4A         MOV.W   R10, R14
   \   000040   ........     CALLA   #?DivMod16s
   \   000044   0212         PUSH.W  SR
   \   000046   32C2         DINT
   \   000048   0343         NOP
   \   00004A   C24C....     MOV.B   R12, &__iar_HWMUL              // MPY
   \   00004E   C24A....     MOV.B   R10, &__iar_HWMUL + 8          // OP2
   \   000052   D282........ SUB.B   &__iar_HWMUL + 10, &menu_counter // RESLO
   \   000058   0343         NOP
   \   00005A   3241         POP.W   SR
    521                print_baud_rate();
   \   00005C   ........     CALLA   #print_baud_rate
    522                debounced = false;
   \   000060   C243....     MOV.B   #0x0, &debounced
    523                TA0CCTL1 |= CCIE;                   // Enable debounce timer
   \   000064   B2D010004403 BIS.W   #0x10, &0x344
    524              }
    525            }
    526            P5IFG = false;
   \                     ??Port_5_0:
   \   00006A   C2435C02     MOV.B   #0x0, &0x25c
    527          }
   \   00006E   5A17         POPM.W  #0x6, R15
   \   000070   0013         RETI
   \   000072                REQUIRE _A_PBOUT_L
   \   000072                REQUIRE _A_TA0CCTL1_L
   \   000072                REQUIRE _A_PCIFG_L

   \                                 In  segment INTVEC, offset 0x36, root
   \                     `??Port_5::??INTVEC 54`:
   \   000036   ....         DC16    Port_5

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Init_Port1
      4   Init_Port2
      4   Init_Port3
      4   Init_Port4
      4   Init_Port5
      4   Init_Port6
      4   Init_Port7
      4   Init_Port8
      4   Init_PortJ
      4   Init_Ports
        4   -> Init_Port1
        4   -> Init_Port2
        4   -> Init_Port3
        4   -> Init_Port4
        4   -> Init_Port5
        4   -> Init_Port6
        4   -> Init_Port7
        4   -> Init_Port8
        0   -> Init_PortJ
     18   Port_5
       16   -> print_baud_rate
       16 ?DivMod16s
      4   reset_iot
        4   -> initialize_delay


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
     106  Init_Port1
     162  Init_Port2
     174  Init_Port3
     162  Init_Port4
     198  Init_Port5
     162  Init_Port6
     162  Init_Port7
      66  Init_Port8
     162  Init_PortJ
      42  Init_Ports
     114  Port_5
       2  Port_5::??INTVEC 54
       2  _A_PADIR_L
       2  _A_PAOUT_L
       2  _A_PASEL0_L
       2  _A_PASEL1_L
       2  _A_PBDIR_L
       2  _A_PBIE_L
       2  _A_PBOUT_L
       2  _A_PBSEL0_L
       2  _A_PBSEL1_L
       2  _A_PCDIR_L
       2  _A_PCIES_L
       2  _A_PCIE_L
       2  _A_PCIFG_L
       2  _A_PCOUT_L
       2  _A_PCREN_L
       2  _A_PCSEL0_L
       2  _A_PCSEL1_L
       2  _A_PDDIR_L
       2  _A_PDOUT_L
       2  _A_PDSEL0_L
       2  _A_PDSEL1_L
       2  _A_PJDIR_L
       2  _A_PJOUT_L
       2  _A_PJSEL0_L
       2  _A_PJSEL1_L
       2  _A_TA0CCTL1_L
       1  debounced
      42  reset_iot
       1  shape_routine_begin
       1  transmit_tmp_message

 
 1 438 bytes in segment CODE
    52 bytes in segment DATA16_AN
     3 bytes in segment DATA16_Z
     2 bytes in segment INTVEC
   114 bytes in segment ISR_CODE
 
 1 552 bytes of CODE  memory
     0 bytes of CONST memory (+  2 bytes shared)
     3 bytes of DATA  memory (+ 52 bytes shared)

Errors: none
Warnings: none
